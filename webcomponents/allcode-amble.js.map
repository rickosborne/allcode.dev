{"version":3,"sources":["webpack://allcode-amble-webcomponent/./node_modules/lit-element/lib/css-tag.js","webpack://allcode-amble-webcomponent/./node_modules/lit-element/lib/decorators.js","webpack://allcode-amble-webcomponent/./node_modules/lit-element/lib/updating-element.js","webpack://allcode-amble-webcomponent/./node_modules/lit-element/lit-element.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/directives/class-map.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/directives/unsafe-html.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/directives/until.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/default-template-processor.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/directive.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/dom.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/modify-template.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/part.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/parts.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/render.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/shady-render.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/template-factory.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/template-instance.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/template-result.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lib/template.js","webpack://allcode-amble-webcomponent/./node_modules/lit-html/lit-html.js","webpack://allcode-amble-webcomponent/./index.ts","webpack://allcode-amble-webcomponent/./src/AmbleArt.ts","webpack://allcode-amble-webcomponent/./src/AmbleButtonElement.ts","webpack://allcode-amble-webcomponent/./src/AmbleCodeElement.ts","webpack://allcode-amble-webcomponent/./src/AmbleElement.ts","webpack://allcode-amble-webcomponent/./src/AmbleQuestionElement.ts","webpack://allcode-amble-webcomponent/./src/AmbleSourceElement.ts","webpack://allcode-amble-webcomponent/./src/AmbleSourceFormatter.ts","webpack://allcode-amble-webcomponent/./src/AmbleSourceRefElement.ts","webpack://allcode-amble-webcomponent/./src/AmbleStepElement.ts","webpack://allcode-amble-webcomponent/./src/AmbleViewerElement.ts","webpack://allcode-amble-webcomponent/./src/ResolvablePromise.ts","webpack://allcode-amble-webcomponent/./src/util.ts","webpack://allcode-amble-webcomponent/webpack/bootstrap","webpack://allcode-amble-webcomponent/webpack/runtime/define property getters","webpack://allcode-amble-webcomponent/webpack/runtime/hasOwnProperty shorthand","webpack://allcode-amble-webcomponent/webpack/runtime/make namespace object","webpack://allcode-amble-webcomponent/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mC;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qBAAqB,qGAAqG;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,mEAAmE,KAAK;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,yCAAyC,aAAa;AACtD;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB,SAAS,oBAAoB;AAC7F;AACA,wDAAwD,UAAU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;;;;AC3YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,KAAK;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACboBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC,wBAAwB,IAAI;AAC5B,iBAAiB,QAAQ;AACziBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsD;AACM;AAClB;AACN;AACgD;AACV;AACzC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yBAAyB,qEAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wEAA2B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0DAAS;AAChC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wEAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gDAAgD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAM;AAC1B,uC;;;;;;;;;;;;;;;ACjRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,KAAK,SAAS;AACd,qBAAqB;AACrB;AACO,iBAAiB,uDAAS;AACjC,0BAA0B,uDAAa,sBAAsB,sDAAY;AACzE;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qC;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,mBAAmB,uDAAS;AACnC,0BAA0B,kDAAQ;AAClC;AACA;AACA;AACA,uCAAuC,0DAAW;AAClD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,8BAA8B,kBAAkB;AAChD,CAAC;AACD,uC;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACH;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8CAA8C;AAC5D;AACO,cAAc,uDAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD,iC;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8G;AAC9G;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wDAAiB;AACnD;AACA;AACA;AACA,wBAAwB,gDAAS;AACjC;AACA;AACA,wBAAwB,2DAAoB;AAC5C;AACA,8BAA8B,yDAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAQ;AAC3B;AACA;AACO;AACP,sD;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC,KAAK,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACO;AACP;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA,qC;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqD;AACrD,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,WAAW,UAAU,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA,YAAY,kEAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,WAAW,UAAU,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP,gC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C;AACN;AACO;AACY;AACJ;AACT;AACtC;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,IAAI,cAAc;AACxC;AACA,sBAAsB,IAAI,GAAG,IAAI,aAAa,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAQ;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,0DAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAW;AAC1B;AACA,yBAAyB,8CAAQ;AACjC;AACA;AACA,2BAA2B,8CAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0DAAY;AAC3D,6CAA6C,0DAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAW;AAC1B;AACA,kCAAkC,8CAAQ;AAC1C;AACA;AACA;AACA,sBAAsB,8CAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+DAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6CAAO;AAClC,yBAAyB,6CAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mEAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAW;AAC1B;AACA,kCAAkC,8CAAQ;AAC1C;AACA;AACA,oCAAoC,8CAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8CAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAW;AAC1B;AACA,kCAAkC,8CAAQ;AAC1C;AACA;AACA,oCAAoC,8CAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8CAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAuD;AAChE;AACA,iC;;;;;;;;;;;;;;;;;;AC3dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuC;AACD;AACkB;AACjD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,QAAQ,oDAAW;AACnB,wCAAwC,+CAAQ,gBAAgB,gBAAgB,qEAAE;AAClF;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACuC;AACgD;AAC9B;AACF;AACG;AACT;AACU;AAC3D;AACA,oDAAoD,KAAK,IAAI,UAAU;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACO;AACP;AACA,wBAAwB,oEAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,QAAQ,oEAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,oCAAoC,gDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oEAAkB;AAC5C;AACA;AACA,uBAAuB,WAAW,UAAU,EAAE;AAC9C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,4EAAuB;AACvC,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAuB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,wBAAwB,iDAAS;AACjC;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,IAAI,kDAAS,yCAAyC,mDAAmD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAS;AAC9B,QAAQ,oDAAY;AACpB;AACA;AACA;AACA;AACA;AACA,+CAA+C,mEAAgB;AAC/D;AACA;AACA;AACA,QAAQ,oDAAW;AACnB;AACA,QAAQ,iDAAS;AACjB;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;;;;AC7RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gDAAM;AAC1C;AACA;AACA;AACA;AACA,uBAAuB,kDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4C;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACa;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iDAAY;AACrC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,mFAAmF,qBAAqB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kEAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACwD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uBAAuB;AAClE,0BAA0B,gDAAM,CAAC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qEAA2B;AAC9D;AACA;AACA;AACA,yDAAyD,MAAM;AAC/D,8BAA8B,MAAM;AACpC;AACA,gEAAgE,oDAAU;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,8DAAoB;AAC5D,oBAAoB,gDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,sDAAa;AACrB;AACA;AACA;AACA,2C;;;;;;;;;;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kBAAkB,MAAM,iCAAiC;AAChE;AACA;AACA;AACA;AACO,0BAA0B,OAAO;AACjC,kCAAkC,OAAO,GAAG,WAAW;AAC9D;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,0FAA0F,qBAAqB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB,SAAS,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAmD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+BAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,oC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AAC+E;AACF;AAC4B;AAC7C;AAC5D;AAC0D;AACR;AACsH;AACxH;AAC4B;AACd;AACe;AACI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yCAAyC,mEAAc,0BAA0B,wFAAwB;AAChH;AACA;AACA;AACA;AACO,wCAAwC,sEAAiB,yBAAyB,wFAAwB;AACjH,oC;;;;;;;;;;;;;AC1DA,8GAA4D;AAApD,2IAAkB;AAC1B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","file":"allcode-amble.js","sourcesContent":["/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector, cache) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        if (cache) {\n            const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n            descriptor.get = function () {\n                if (this[key] === undefined) {\n                    (this[key] =\n                        this.renderRoot.querySelector(selector));\n                }\n                return this[key];\n            };\n        }\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype;\nconst legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(slotName = '', flatten = false, selector = '') {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const slotSelector = `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n                const slot = this.renderRoot.querySelector(slotSelector);\n                let nodes = slot && slot.assignedNodes({ flatten });\n                if (nodes && selector) {\n                    nodes = nodes.filter((node) => node.nodeType === Node.ELEMENT_NODE &&\n                        node.matches ?\n                        node.matches(selector) :\n                        legacyMatches.call(node, selector));\n                }\n                return nodes;\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n    constructor(element) {\n        this.classes = new Set();\n        this.changed = false;\n        this.element = element;\n        const classList = (element.getAttribute('class') || '').split(/\\s+/);\n        for (const cls of classList) {\n            this.classes.add(cls);\n        }\n    }\n    add(cls) {\n        this.classes.add(cls);\n        this.changed = true;\n    }\n    remove(cls) {\n        this.classes.delete(cls);\n        this.changed = true;\n    }\n    commit() {\n        if (this.changed) {\n            let classString = '';\n            this.classes.forEach((cls) => classString += cls + ' ');\n            this.element.setAttribute('class', classString);\n        }\n    }\n}\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    let previousClasses = previousClassesCache.get(part);\n    if (previousClasses === undefined) {\n        // Write static classes once\n        // Use setAttribute() because className isn't a string on SVG elements\n        element.setAttribute('class', committer.strings.join(' '));\n        previousClassesCache.set(part, previousClasses = new Set());\n    }\n    const classList = (element.classList || new ClassList(element));\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousClasses.forEach((name) => {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n            previousClasses.delete(name);\n        }\n    });\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (value != previousClasses.has(name)) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            if (value) {\n                classList.add(name);\n                previousClasses.add(name);\n            }\n            else {\n                classList.remove(name);\n                previousClasses.delete(name);\n            }\n        }\n    }\n    if (typeof classList.commit === 'function') {\n        classList.commit();\n    }\n});\n//# sourceMappingURL=class-map.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive, NodePart } from '../lit-html.js';\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap();\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value) => (part) => {\n    if (!(part instanceof NodePart)) {\n        throw new Error('unsafeHTML can only be used in text bindings');\n    }\n    const previousValue = previousValues.get(part);\n    if (previousValue !== undefined && isPrimitive(value) &&\n        value === previousValue.value && part.value === previousValue.fragment) {\n        return;\n    }\n    const template = document.createElement('template');\n    template.innerHTML = value; // innerHTML casts to string internally\n    const fragment = document.importNode(template.content, true);\n    part.setValue(fragment);\n    previousValues.set(part, { value, fragment });\n});\n//# sourceMappingURL=unsafe-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isPrimitive } from '../lib/parts.js';\nimport { directive } from '../lit-html.js';\nconst _state = new WeakMap();\n// Effectively infinity, but a SMI.\nconst _infinity = 0x7fffffff;\n/**\n * Renders one of a series of values, including Promises, to a Part.\n *\n * Values are rendered in priority order, with the first argument having the\n * highest priority and the last argument having the lowest priority. If a\n * value is a Promise, low-priority values will be rendered until it resolves.\n *\n * The priority of values can be used to create placeholder content for async\n * data. For example, a Promise with pending content can be the first,\n * highest-priority, argument, and a non_promise loading indicator template can\n * be used as the second, lower-priority, argument. The loading indicator will\n * render immediately, and the primary content will render when the Promise\n * resolves.\n *\n * Example:\n *\n *     const content = fetch('./content.txt').then(r => r.text());\n *     html`${until(content, html`<span>Loading...</span>`)}`\n */\nexport const until = directive((...args) => (part) => {\n    let state = _state.get(part);\n    if (state === undefined) {\n        state = {\n            lastRenderedIndex: _infinity,\n            values: [],\n        };\n        _state.set(part, state);\n    }\n    const previousValues = state.values;\n    let previousLength = previousValues.length;\n    state.values = args;\n    for (let i = 0; i < args.length; i++) {\n        // If we've rendered a higher-priority value already, stop.\n        if (i > state.lastRenderedIndex) {\n            break;\n        }\n        const value = args[i];\n        // Render non-Promise values immediately\n        if (isPrimitive(value) ||\n            typeof value.then !== 'function') {\n            part.setValue(value);\n            state.lastRenderedIndex = i;\n            // Since a lower-priority value will never overwrite a higher-priority\n            // synchronous value, we can stop processing now.\n            break;\n        }\n        // If this is a Promise we've already handled, skip it.\n        if (i < previousLength && value === previousValues[i]) {\n            continue;\n        }\n        // We have a Promise that we haven't seen before, so priorities may have\n        // changed. Forget what we rendered before.\n        state.lastRenderedIndex = _infinity;\n        previousLength = 0;\n        Promise.resolve(value).then((resolvedValue) => {\n            const index = state.values.indexOf(value);\n            // If state.values doesn't contain the value, we've re-rendered without\n            // the value, so don't render it. Then, only render if the value is\n            // higher-priority than what's already been rendered.\n            if (index > -1 && index < state.lastRenderedIndex) {\n                state.lastRenderedIndex = index;\n                part.setValue(resolvedValue);\n                part.commit();\n            }\n        });\n    }\n});\n//# sourceMappingURL=until.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","export {AmbleButtonElement} from './src/AmbleButtonElement';\nexport {AmbleCodeElement} from './src/AmbleCodeElement';\nexport {AmbleQuestionElement} from './src/AmbleQuestionElement';\nexport {AmbleSourceElement} from './src/AmbleSourceElement';\nexport {AmbleSourceRefElement} from './src/AmbleSourceRefElement';\nexport {AmbleStepElement} from './src/AmbleStepElement';\nexport {AmbleViewerElement} from './src/AmbleViewerElement';\n","import {html} from '../node_modules/lit-element/lit-element.js';\n\n// function artSvg(\n//   iconName: string,\n//   bounds: string = '-1 -1 11 11',\n//   prefix: string = '/src/',\n// ): TemplateResult {\n//   return html`\n//     <svg viewBox=\"${bounds}\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//       <use xlink:href=\"${prefix}#${iconName}\"></use>\n//     </svg>\n//   `;\n// }\n\nexport const ARROW_LEFT_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M2.5,4.5 l4,-4 v8 z\" />\n\t</svg>\n`;\n\nexport const ARROW_RIGHT_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M6.5,4.5 l-4,4 v-8 z\" />\n\t</svg>\n`;\n\nexport const WALK_THROUGH_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M0,7 l2,-2 v4 l-2,-2 M9,7 l-2,2 v-4 l2,2 M4,4.5 v3.5 h1 v-3.5 M5,5.5 a2.5,2.5,0,1,0,-1,0 v-1 a1.5,1.5,0,1,1,1,0 v1\" />\n\t</svg>\n`;\n\nexport const SELF_ASSESSMENT_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M0,7 l2,-2 v4 l-2,-2 M4,7 h1 v1 h-1 v-1 M9,7 l-2,2 v-4 l2,2 M4,6 h1 v-1 l2,-2 v-1.5 l-1,-1 h-3 l-1,1 l0.6,0.6 l1,-0.7 h1.8 l0.7,0.7 v0.5 l-2,2 v1.4\" />\n\t</svg>\n`;\n\nexport const SHOW_LESS_SVG = html`\n\t<svg viewbox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M0.5,5 l4,-4 l4,4 l-1,1 l-3,-3 l-3,3 z\" />\n\t\t<path d=\"M0,8 h1 v1 h-1 v-1 M2,8 h1 v1 h-1 v-1 M4,8 h1 v1 h-1 v-1 M6,8 h1 v1 h-1 v-1 M8,8 h1 v1 h-1 v-1\" />\n\t</svg>\n`;\n\nexport const CHECKED_BOX_SVG = html`\n\t<svg viewbox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M1,1 h6 l-1,1 h-4 v5 h5 v-2 l1,-1 v4 h-7 z\" />\n\t\t<path d=\"M2,5 l1,-1 l1,1 l4,-4 l1,1 l-5,5 z\" />\n\t</svg>\n`;\n\nexport const LAYOUT_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M0,0 h4 v5 h-4 v-4 M5,0 h4 v3 h-4 v-3 M0,6 h4 v3 h-4 v-3 M5,4 h4 v5 h-4 v-5\" />\n\t</svg>\n`;\n\nexport const FULL_SCREEN_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M0,0 h3 v1 h-2 v2 h-1 v-3 M6,0 h3 v3 h-1 v-2 h-2 v-1 M8,6 h1 v3 h-3 v-1 h2 v-2 M0,9 v-3 h1 v2 h2 v1 h-3\" />\n\t</svg>\n`;\n\nexport const EXIT_FULL_SCREEN_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M2,4 v-1 h2 v-2 h1 v3 h-3 M6,4 v-3 h1 v2 h2 v1 h-3 M2,5 h3 v3 h-1 v-2 h-2 v-1 M6,5 h3 v1 h-2 v2 h-1 v-3\" />\n\t</svg>\n`;\n\nexport const INFO_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M4.5,1 a3.5,3.5,0,0,1,0,7 v-1 h0.5 v-3.5 h-0.5 v-0.5 a0.5,0.5,0,0,0,0,-1 v-1 a3.5,3.5,0,0,0,0,7 v-1 h-0.5 v-3.5 h0.5 v-0.5 a0.5,0.5,0,0,1,0,-1 v-1\" />\n\t</svg>\n`;\n\nexport const SHOW_MORE_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M0,3 q2,-2,4.5,-2 q2.5,0,4.5,2 h-3 A1.5,1.5,0,0,0,3,3 A1.5,1.5,0,0,0,6,3 h3 q-2.5,2,-4.5,2 q-2,0,-4.5-2 M4,3 A0.5,0.5,0,0,0,5,3 A0.5,0.5,0,0,0,4,3 M0.5,6 l0.5,-0.5 l3.5,2 l3.5,-2 l0.5,0.5 l-4,2.25 l-4,-2.25\" />\n\t</svg>\n`;\n\nexport const LINK_SVG = html`\n\t<svg viewBox=\"-1 -1 11 11\" class=\"amble-icon\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path d=\"M1,8 v-4 h1 v3 h3 v1 h-4 m2,-3 l2,-2 l-1,-1 h3 v3 l-1,-1 l-2,2 l-1,-1\" />\n\t</svg>\n`;\n","import {customElement, html, property} from 'lit-element';\nimport {classMap} from 'lit-html/directives/class-map';\nimport {TemplateResult} from 'lit-html';\nimport {AmbleElement} from './AmbleElement';\n\n@customElement('amble-button')\nexport class AmbleButtonElement extends AmbleElement {\n\t@property({type: Boolean})\n\tpublic active = false;\n\t@property({type: Boolean})\n\tpublic disabled = false;\n\t@property({type: String})\n\tpublic value: string | undefined;\n\n\t@property({type: String})\n\tpublic set bindableTitle(title: string) {\n\t\tconst previousTitle = this.title;\n\t\tif (previousTitle !== title) {\n\t\t\tthis.title = title;\n\t\t\tthis.requestUpdate('title', previousTitle);\n\t\t}\n\t}\n\n\tpublic render(): TemplateResult {\n\t\treturn this.hidden\n\t\t\t? html``\n\t\t\t: html`\n\t\t\t\t\t<link rel=\"stylesheet\" href=\"src/AmbleButtonElement.css\" />\n\t\t\t\t\t<button\n\t\t\t\t\t\t.title=\"${this.title}\"\n\t\t\t\t\t\taria-label=\"${this.label}\"\n\t\t\t\t\t\t?disabled=\"${this.disabled}\"\n\t\t\t\t\t\tclass=\"${classMap({\n\t\t\t\t\t\t\tactive: this.active,\n\t\t\t\t\t\t\tinactive: !this.active,\n\t\t\t\t\t\t})}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t</button>\n\t\t\t  `;\n\t}\n}\n","import {customElement, html, property, PropertyValues} from 'lit-element';\nimport {Part, TemplateResult} from 'lit-html';\nimport {classMap} from 'lit-html/directives/class-map';\nimport {unsafeHTML} from 'lit-html/directives/unsafe-html';\nimport {until} from 'lit-html/directives/until';\nimport {ARROW_LEFT_SVG, ARROW_RIGHT_SVG} from './AmbleArt';\nimport {AmbleElement} from './AmbleElement';\nimport {CachingHighlighter, cachingHighlighter} from './AmbleSourceFormatter';\nimport {AmbleSourceRefElement} from './AmbleSourceRefElement';\nimport {resolvablePromise} from './ResolvablePromise';\n\nexport type UnsafeHtmlLike = (part: Part) => void;\nexport const CodeChangeRequestEventType = 'codechangerequest';\n\nexport class CodeChangeRequestEvent extends Event {\n\tconstructor(public readonly step: number, public readonly codeElement: AmbleCodeElement) {\n\t\tsuper(CodeChangeRequestEventType, {\n\t\t\tbubbles: true,\n\t\t\tcancelable: true,\n\t\t\tcomposed: true,\n\t\t});\n\t}\n}\n\n@customElement('amble-code')\nexport class AmbleCodeElement extends AmbleElement {\n\tprivate _codeEl: HTMLElement | undefined;\n\tpublic _navControls = false;\n\t@property({type: String})\n\tpublic highlightClass = 'highlight';\n\tpublic readonly highlighted = resolvablePromise<UnsafeHtmlLike>();\n\tpublic highlighter: CachingHighlighter = cachingHighlighter();\n\t@property({type: Number})\n\tpublic index!: number;\n\tprivate previousHighlightSelector: string | undefined;\n\tprivate readonly previousHighlights: Element[] = [];\n\t@property({type: String})\n\tpublic source!: string;\n\t@property({type: String})\n\tpublic syntax!: string;\n\n\tpublic get codeEl(): HTMLElement | undefined {\n\t\tif (this._codeEl == null) {\n\t\t\tconst el: HTMLElement | null | undefined = this.shadowRoot?.querySelector('.amble-syntax-highlighted');\n\t\t\tif (el != null) {\n\t\t\t\tthis._codeEl = el;\n\t\t\t}\n\t\t}\n\t\treturn this._codeEl;\n\t}\n\n\t@property({type: Boolean})\n\tpublic set navControls(show: boolean) {\n\t\tconst previous = this._navControls;\n\t\tif (previous !== show) {\n\t\t\tthis._navControls = show;\n\t\t\tthis.requestUpdate('navControls', show);\n\t\t}\n\t}\n\n\tpublic clearHighlighted(): void {\n\t\tthis.previousHighlightSelector = undefined;\n\t\tthis.previousHighlights.forEach((el) => el.classList.remove(this.highlightClass));\n\t\tthis.previousHighlights.splice(0, this.previousHighlights.length);\n\t}\n\n\tprivate emitChangeRequest(step: number): void {\n\t\tthis.dispatchEvent(new CodeChangeRequestEvent(step, this));\n\t}\n\n\tprotected firstUpdated(_changedProperties: PropertyValues): void {\n\t\tsuper.firstUpdated(_changedProperties);\n\t\tthis.highlighter(this.source, this.syntax.split(',')[0])\n\t\t\t.then((html) => this.highlighted.resolve(unsafeHTML(html)))\n\t\t\t.catch((reason) => this.highlighted.reject(reason));\n\t}\n\n\tpublic onNextLanguage(): void {\n\t\tthis.emitChangeRequest(1);\n\t}\n\n\tpublic onPrevLanguage(): void {\n\t\tthis.emitChangeRequest(-1);\n\t}\n\n\tpublic render(): TemplateResult {\n\t\treturn html`\n\t\t\t<link rel=\"stylesheet\" href=\"src/AmbleCodeElement.css\" />\n\t\t\t<div\n\t\t\t\tclass=${classMap({\n\t\t\t\t\t'amble-code-nav': this._navControls,\n\t\t\t\t\t'amble-code-no-nav': !this._navControls,\n\t\t\t\t\t'amble-code-window': true,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<pre><code class=\"amble-syntax-highlighted\">${until(this.highlighted, this.source)}</code></pre>\n\t\t\t\t<div class=\"amble-code-language\">\n\t\t\t\t\t<label>${this.label}</label>\n\t\t\t\t\t<amble-button @click=\"${this.onPrevLanguage}\" class=\"amble-code-language-prev\" label=\"Previous Language\" title=\"Previous Language\">${ARROW_LEFT_SVG}</amble-button>\n\t\t\t\t\t<amble-button @click=\"${this.onNextLanguage}\" class=\"amble-code-language-next\" label=\"Next Language\" title=\"Next Language\">${ARROW_RIGHT_SVG}</amble-button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tpublic setHighlightedSourceRefs(refs: AmbleSourceRefElement[] | undefined): void {\n\t\tif (refs != null) {\n\t\t\tconst codeEl = this.codeEl;\n\t\t\tif (codeEl == null) {\n\t\t\t\tsetTimeout(() => this.setHighlightedSourceRefs(refs), 100);\n\t\t\t} else {\n\t\t\t\tconst langIds = this.syntax.split(',');\n\t\t\t\tconst ref = refs.filter((r) => r.languageId == null || langIds.includes(r.languageId))[0];\n\t\t\t\tif (ref == null) {\n\t\t\t\t\tthis.clearHighlighted();\n\t\t\t\t} else if (ref.selector !== this.previousHighlightSelector) {\n\t\t\t\t\tthis.clearHighlighted();\n\t\t\t\t\tthis.previousHighlightSelector = ref.selector;\n\t\t\t\t\tconst selected: Element[] = Array.prototype.slice.apply(codeEl.querySelectorAll(ref.selector));\n\t\t\t\t\tthis.previousHighlights.push(...selected);\n\t\t\t\t\tselected.forEach((el) => el.classList.add(this.highlightClass));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clearHighlighted();\n\t\t}\n\t}\n}\n","import {LitElement, property} from 'lit-element';\nimport {catchAndLog} from './util';\n\nexport abstract class AmbleElement extends LitElement {\n\t@property({type: Boolean})\n\tpublic hidden = false;\n\t@property({type: String})\n\tpublic label = '';\n\t@property({type: String})\n\tpublic title = '';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tprotected changed(key: PropertyKey, previous?: unknown): void {\n\t\tcatchAndLog(this.requestUpdate(key, previous));\n\t}\n}\n","import {customElement, property} from 'lit-element';\nimport {AmbleElement} from './AmbleElement';\nimport {AmbleHasLinks, AmbleHasSourceRefs} from './AmbleInterfaces';\nimport {AmbleSourceRefElement} from './AmbleSourceRefElement';\n\nexport const HIGHLIGHT_WHEN_Q = 'Question';\nexport const HIGHLIGHT_WHEN_A = 'Answer';\nexport const HIGHLIGHT_WHEN_R = 'Rationale';\nexport type HighlightWhen = typeof HIGHLIGHT_WHEN_Q | typeof HIGHLIGHT_WHEN_A | typeof HIGHLIGHT_WHEN_R;\n\n@customElement('amble-question')\nexport class AmbleQuestionElement extends AmbleElement implements AmbleHasLinks, AmbleHasSourceRefs {\n\tpublic readonly answerEl: HTMLElement | null;\n\t@property({type: String})\n\tpublic readonly highlightWhen: HighlightWhen = HIGHLIGHT_WHEN_A;\n\tpublic readonly links: HTMLElement[];\n\tpublic readonly questionEl: HTMLElement | null;\n\tpublic readonly rationaleEl: HTMLElement | null;\n\tpublic readonly sourceRefs: AmbleSourceRefElement[];\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.questionEl = this.querySelector<HTMLElement>('[slot=\"question\"]');\n\t\tthis.answerEl = this.querySelector<HTMLElement>('[slot=\"answer\"]');\n\t\tthis.rationaleEl = this.querySelector<HTMLElement>('[slot=\"rationale\"]');\n\t\tthis.sourceRefs = Array.prototype.slice.apply(this.querySelectorAll('amble-source-ref, [is=\"amble-source-ref\"]'));\n\t\tthis.links = Array.prototype.slice.apply(this.querySelectorAll('.amble-link'));\n\t}\n}\n","import {customElement, property} from 'lit-element';\nimport {AmbleElement} from './AmbleElement';\nimport {unindent} from './util';\n\n@customElement('amble-source')\nexport class AmbleSourceElement extends AmbleElement {\n\t@property({type: String})\n\tpublic syntax = '';\n\n\t@property({type: String})\n\tpublic get source(): string {\n\t\treturn this.innerText;\n\t}\n\n\t@property({type: String})\n\tpublic get unindentedSource(): string {\n\t\treturn unindent(this.source);\n\t}\n}\n","export type CachingHighlighter = (code: string, language: string) => Promise<string>;\n\nexport const OP_NAMES: Record<string, string> = {\n\t'!': 'bang',\n\t'!=': 'neq',\n\t'%': 'percent',\n\t'&': 'and',\n\t'&&': 'andand',\n\t'&amp;': 'and',\n\t'&amp;&amp;': 'andand',\n\t'&gt;': 'gt',\n\t'&gt;=': 'gte',\n\t'&lt;': 'lt',\n\t'&lt;&gt;': 'gtlt',\n\t'&lt;=': 'lte',\n\t'*': 'star',\n\t'**': 'starstar',\n\t'+': 'plus',\n\t'++': 'plusplus',\n\t'-': 'minus',\n\t'-&gt;': 'rarr',\n\t'--': 'minusminus',\n\t'->': 'rarr',\n\t'/': 'slash',\n\t':': 'colon',\n\t':=': 'coloneq',\n\t'<': 'lt',\n\t'<=': 'lte',\n\t'<>': 'gtlt',\n\t'=': 'eq',\n\t'=&gt;': 'eqgt',\n\t'==': 'eqeq',\n\t'=>': 'eqgt',\n\t'>': 'gt',\n\t'>=': 'gte',\n\t'?': 'q',\n\t'\\\\': 'backslash',\n\t'^': 'caret',\n\t'|': 'or',\n\t'||': 'oror',\n};\n\nexport const COUNTED_CLASS_NAMES = ['variable', 'keyword', 'class-name', 'annotation', 'boolean', 'namespace', 'number'];\n\nfunction getPrism(): Promise<unknown> {\n\treturn new Promise<unknown>((resolve, reject) => {\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tconst existing = ((window as unknown) as any).Prism;\n\t\tif (existing != null) {\n\t\t\tresolve(existing);\n\t\t} else {\n\t\t\tdocument.addEventListener('load', () => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\tconst loaded = ((window as unknown) as any).Prism;\n\t\t\t\tif (loaded == null) {\n\t\t\t\t\treject(new Error('Prism not configured.'));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(loaded);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction formatSource(code: string, language: string): Promise<string> {\n\treturn getPrism().then((prism) => {\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tconst grammar = (prism as any).languages[language];\n\t\tif (grammar == null) {\n\t\t\tconsole.warn(`No grammar for language: ${language}`);\n\t\t\treturn '';\n\t\t}\n\t\ttry {\n\t\t\tconst typeCounts: Record<string, number> = {};\n\t\t\tconst cleanAndCount = (prefix: string, value: string): string[] => {\n\t\t\t\tconst clean = value.replace(/[^A-Za-z0-9]/g, '').toLowerCase();\n\t\t\t\tconst key = `${prefix}-${clean}`;\n\t\t\t\tconst count = (typeCounts[key] || 0) + 1;\n\t\t\t\ttypeCounts[key] = count;\n\t\t\t\treturn [key, `${key}-${count}`];\n\t\t\t};\n\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\treturn (prism as any)\n\t\t\t\t.highlight(code, grammar, language)\n\t\t\t\t.split(/\\r\\n|[\\r\\n]/g)\n\t\t\t\t.map((line: string, index: number) => {\n\t\t\t\t\tconst l = line\n\t\t\t\t\t\t.replace(/<span\\s+class=\"(.+?)\">(.*?)<\\/span>/g, (all, classNames: string, value: string) => {\n\t\t\t\t\t\t\tconst cns = classNames.split(/\\s+/g);\n\t\t\t\t\t\t\tfor (const type of COUNTED_CLASS_NAMES) {\n\t\t\t\t\t\t\t\tif (cns.includes(type)) {\n\t\t\t\t\t\t\t\t\tcns.push(...cleanAndCount(type, value));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (cns.includes('operator')) {\n\t\t\t\t\t\t\t\tconst opName = OP_NAMES[value];\n\t\t\t\t\t\t\t\tif (opName != null) {\n\t\t\t\t\t\t\t\t\tcns.push(...cleanAndCount('operator', opName));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn `<span class=\"${cns.join(' ')}\">${value}</span>`;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.replace(/((?:^|<\\/span>)[ \\t]*)([a-zA-Z0-9_]+)([ \\t]*(?:<span|$))/, (all, pre: string, mid: string, post: string) => {\n\t\t\t\t\t\t\treturn `${pre}<span class=\"bare ${cleanAndCount('bare', mid).join(' ')}\">${mid}</span>${post}`;\n\t\t\t\t\t\t});\n\t\t\t\t\treturn `<span class=\"line line-${index + 1}\">${l}</span>`;\n\t\t\t\t})\n\t\t\t\t.join('\\n');\n\t\t} catch (err) {\n\t\t\tconsole.error('Error while highlighting', language, code, err);\n\t\t}\n\t\treturn code;\n\t});\n}\n\nexport function cachingHighlighter(): CachingHighlighter {\n\tconst cache: Record<string, Record<string, string>> = {};\n\treturn (code, language): Promise<string> => {\n\t\tlet snips = cache[language];\n\t\tif (snips == null) {\n\t\t\tsnips = {};\n\t\t\tcache[language] = snips;\n\t\t}\n\t\tconst html = snips[code];\n\t\tif (html != null) {\n\t\t\treturn Promise.resolve(html);\n\t\t}\n\t\tconst detabified = code.replace(/\\t/g, '  ');\n\t\treturn formatSource(detabified, language).then((html) => {\n\t\t\tsnips[code] = html;\n\t\t\treturn html;\n\t\t});\n\t};\n}\n","import {customElement, property} from 'lit-element';\nimport {AmbleElement} from './AmbleElement';\n\n@customElement('amble-source-ref')\nexport class AmbleSourceRefElement extends AmbleElement {\n\t@property({type: String})\n\tpublic selector!: string;\n\t@property({type: String})\n\tpublic languageId: string | undefined;\n}\n","import {customElement} from 'lit-element';\nimport {AmbleElement} from './AmbleElement';\nimport {AmbleHasLinks, AmbleHasSourceRefs} from './AmbleInterfaces';\nimport {AmbleSourceRefElement} from './AmbleSourceRefElement';\nimport {undefIfEmpty} from './util';\n\n@customElement('amble-step')\nexport class AmbleStepElement extends AmbleElement implements AmbleHasLinks, AmbleHasSourceRefs {\n\tpublic description: string | undefined;\n\tpublic extra: string | undefined;\n\tpublic readonly links: HTMLElement[];\n\tpublic readonly sourceRefs: AmbleSourceRefElement[];\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.description = undefIfEmpty(this.querySelector('[slot=\"description\"]')?.innerHTML);\n\t\tthis.extra = undefIfEmpty(this.querySelector('[slot=\"extra\"]')?.innerHTML);\n\t\tthis.sourceRefs = Array.prototype.slice.apply(this.querySelectorAll('amble-source-ref, [is=\"amble-source-ref\"]'));\n\t\tthis.links = Array.prototype.slice.apply(this.querySelectorAll('.amble-link'));\n\t}\n}\n","import {customElement, html, property, PropertyValues} from 'lit-element';\nimport {TemplateResult} from 'lit-html';\nimport {classMap} from 'lit-html/directives/class-map';\nimport {unsafeHTML} from 'lit-html/directives/unsafe-html';\nimport {ARROW_LEFT_SVG, ARROW_RIGHT_SVG, CHECKED_BOX_SVG, EXIT_FULL_SCREEN_SVG, FULL_SCREEN_SVG, INFO_SVG, LAYOUT_SVG, LINK_SVG, SELF_ASSESSMENT_SVG, SHOW_LESS_SVG, SHOW_MORE_SVG, WALK_THROUGH_SVG} from './AmbleArt';\nimport {AmbleCodeElement, CodeChangeRequestEvent, CodeChangeRequestEventType} from './AmbleCodeElement';\nimport {AmbleElement} from './AmbleElement';\nimport {AmbleHasLinks, AmbleHasSourceRefs} from './AmbleInterfaces';\nimport {AmbleQuestionElement, HIGHLIGHT_WHEN_Q, HIGHLIGHT_WHEN_R} from './AmbleQuestionElement';\nimport {AmbleSourceElement} from './AmbleSourceElement';\nimport {AmbleSourceRefElement} from './AmbleSourceRefElement';\nimport {AmbleStepElement} from './AmbleStepElement';\n\n// TODO: Migrate much of this to observables\n\nexport const FOOTER_MODE_STEP = 'step';\nexport const FOOTER_MODE_QUIZ = 'quiz';\nexport const FOOTER_MODE_NONE = 'none';\nexport const QUIZ_MODE_Q = 'question';\nexport const QUIZ_MODE_A = 'answer';\nexport const QUIZ_MODE_R = 'rationale';\nexport const BODY_LAYOUT_1 = '1';\nexport const BODY_LAYOUT_2H = '2H';\nexport const BODY_LAYOUT_2V = '2V';\nexport const BODY_LAYOUT_4 = '4';\nexport const BODY_LAYOUT_REFS = 'R';\nexport type BodyLayout = typeof BODY_LAYOUT_1 | typeof BODY_LAYOUT_2H | typeof BODY_LAYOUT_2V | typeof BODY_LAYOUT_4 | typeof BODY_LAYOUT_REFS;\nexport const CODE_COUNT_BY_LAYOUT: Record<BodyLayout, number> = {\n\t[BODY_LAYOUT_1]: 1,\n\t[BODY_LAYOUT_2H]: 2,\n\t[BODY_LAYOUT_2V]: 2,\n\t[BODY_LAYOUT_4]: 4,\n\t[BODY_LAYOUT_REFS]: 1,\n};\nconst QUESTION_CURRENT = 'amble-quiz-qar-current';\n\nconst STEP_EXTRA_MODE_EXTRA = 'extra';\nconst STEP_EXTRA_MODE_STEP = 'step';\n\nexport type QuizMode = typeof QUIZ_MODE_Q | typeof QUIZ_MODE_A | typeof QUIZ_MODE_R;\nexport type FooterMode = typeof FOOTER_MODE_STEP | typeof FOOTER_MODE_QUIZ | typeof FOOTER_MODE_NONE;\n\n// noinspection CssInvalidHtmlTagReference\n@customElement('amble-viewer')\nexport class AmbleViewerElement extends AmbleElement {\n\tprivate _codeChildren!: AmbleCodeElement[];\n\tprivate readonly _renderedQuestions: Element[] = [];\n\tprivate readonly _visibleCode: AmbleCodeElement[] = [];\n\t@property({type: String})\n\tpublic bodyLayout: BodyLayout = BODY_LAYOUT_2H;\n\tpublic currentQuestion: AmbleQuestionElement | undefined;\n\t@property({type: Number})\n\tpublic currentQuestionNum = -1;\n\t@property()\n\tpublic currentRenderedQuestion: Element | undefined;\n\tprivate currentStep: AmbleStepElement | undefined;\n\t@property({type: Number})\n\tpublic currentStepNum = -1;\n\t@property({type: String})\n\tpublic description = '';\n\t@property({type: String})\n\tpublic footerMode: FooterMode = FOOTER_MODE_NONE;\n\t@property({type: Boolean})\n\tprivate isFullScreen = false;\n\tprivate readonly questionChildren: AmbleQuestionElement[] = [];\n\t@property({type: String})\n\tpublic quizMode: QuizMode = QUIZ_MODE_Q;\n\tprivate readonly sources: AmbleSourceElement[] = [];\n\tprivate readonly stepChildren: AmbleStepElement[] = [];\n\t@property({type: String})\n\tpublic stepExtraMode = 'step';\n\t@property({type: String})\n\tpublic title = '';\n\t@property({type: Boolean})\n\tpublic trackProgress = false;\n\tprivate visibleCodeCount = 0;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.querySelectorAll('amble-source, [is=\"amble-source\"]').forEach((s) => this.sources.push(s as AmbleSourceElement));\n\t\tthis.querySelectorAll('amble-question, [is=\"amble-question\"]').forEach((s) => this.questionChildren.push(s as AmbleQuestionElement));\n\t\tthis.querySelectorAll('amble-step, [is=\"amble-step\"]').forEach((s) => this.stepChildren.push(s as AmbleStepElement));\n\t\tthis.addEventListener(CodeChangeRequestEventType, (ev: Event): void => {\n\t\t\tif (ev instanceof CodeChangeRequestEvent) {\n\t\t\t\tthis.onCodeChangeRequest(ev);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic get codeChildren(): AmbleCodeElement[] {\n\t\tif (this._codeChildren == null) {\n\t\t\tthis._codeChildren = Array.prototype.slice.apply(this.shadowRoot?.querySelectorAll('amble-code, [is=\"amble-code\"]'));\n\t\t}\n\t\treturn this._codeChildren;\n\t}\n\n\t@property()\n\tpublic get currentHasLinks(): (AmbleHasLinks & AmbleHasSourceRefs) | undefined {\n\t\tswitch (this.footerMode) {\n\t\t\tcase FOOTER_MODE_NONE:\n\t\t\t\treturn undefined;\n\t\t\tcase FOOTER_MODE_QUIZ:\n\t\t\t\treturn this.currentQuestion;\n\t\t\tcase FOOTER_MODE_STEP:\n\t\t\t\treturn this.currentStep;\n\t\t}\n\t}\n\n\tpublic get renderedQuestions(): Element[] {\n\t\tif (this._renderedQuestions.length === 0) {\n\t\t\tconst items = Array.prototype.slice.apply(this.shadowRoot?.querySelectorAll('.amble-quiz-qar'));\n\t\t\tthis._renderedQuestions.push(...items);\n\t\t}\n\t\treturn this._renderedQuestions;\n\t}\n\n\tpublic get visibleCode(): AmbleCodeElement[] {\n\t\tif (this._visibleCode.length === 0) {\n\t\t\tthis._visibleCode.push(...this.codeChildren.slice(0, this.visibleCodeCount));\n\t\t}\n\t\treturn this._visibleCode;\n\t}\n\n\tpublic backQuestion(): void {\n\t\tthis.changeQuestion(-1);\n\t}\n\n\tpublic backStep(): void {\n\t\tthis.changeStep(-1);\n\t}\n\n\tpublic changeQuestion(step: number): void {\n\t\tconst previousIndex = this.currentQuestionNum;\n\t\tconst index = (previousIndex + this.questionChildren.length + step) % this.questionChildren.length;\n\t\tthis.setCurrentQuestion(index);\n\t}\n\n\tpublic changeStep(delta: number): void {\n\t\tconst wasStepNum = this.currentStepNum;\n\t\tconst nowStepNum = (wasStepNum + this.stepChildren.length + delta) % this.stepChildren.length;\n\t\tthis.setCurrentStep(nowStepNum);\n\t}\n\n\tprotected firstUpdated(_changedProperties: PropertyValues): void {\n\t\tsuper.firstUpdated(_changedProperties);\n\t\tif (this.sources.length < 2) {\n\t\t\tthis.setLayout(BODY_LAYOUT_1);\n\t\t} else {\n\t\t\tthis.setLayout(BODY_LAYOUT_2H);\n\t\t}\n\t\tif (this.stepChildren.length > 0) {\n\t\t\tthis.footerMode = FOOTER_MODE_STEP;\n\t\t\tthis.setCurrentStep(0);\n\t\t} else if (this.questionChildren.length > 0) {\n\t\t\tthis.footerMode = FOOTER_MODE_QUIZ;\n\t\t\tthis.setCurrentQuestion(0);\n\t\t} else {\n\t\t\tthis.footerMode = FOOTER_MODE_NONE;\n\t\t}\n\t}\n\n\tpublic forwardQuestion(): void {\n\t\tthis.changeQuestion(1);\n\t}\n\n\tpublic forwardStep(): void {\n\t\tthis.changeStep(1);\n\t}\n\n\tpublic goFullscreen(): void {\n\t\tconst onFullScreenChange = (): void => {\n\t\t\tconst el = document.fullscreenElement;\n\t\t\tconst previous = this.isFullScreen;\n\t\t\tconst now = el === this;\n\t\t\tif (previous !== now) {\n\t\t\t\tthis.isFullScreen = now;\n\t\t\t\tthis.changed('isFullScreen', previous);\n\t\t\t}\n\t\t\tif (!now) {\n\t\t\t\tthis.removeEventListener('fullscreenchange', onFullScreenChange);\n\t\t\t\tthis.removeEventListener('fullscreenerror', onFullScreenChange);\n\t\t\t}\n\t\t};\n\t\tif (document.fullscreenElement === this) {\n\t\t\tdocument.exitFullscreen().finally(() => {\n\t\t\t\tthis.removeEventListener('fullscreenchange', onFullScreenChange);\n\t\t\t\tthis.removeEventListener('fullscreenerror', onFullScreenChange);\n\t\t\t\tthis.isFullScreen = false;\n\t\t\t\treturn this.changed('isFullScreen', true);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.requestFullscreen().then(() => {\n\t\t\t\tthis.isFullScreen = true;\n\t\t\t\treturn this.changed('isFullScreen', false);\n\t\t\t});\n\t\t\tthis.addEventListener('fullscreenchange', onFullScreenChange);\n\t\t\tthis.addEventListener('fullscreenerror', onFullScreenChange);\n\t\t}\n\t}\n\n\tpublic goQuizMode(): void {\n\t\tthis.setFooterMode(FOOTER_MODE_QUIZ);\n\t\tthis.setQuizMode(QUIZ_MODE_Q);\n\t\tthis.setCurrentQuestion(0);\n\t\tthis.rehighlight();\n\t}\n\n\tpublic goStepMode(): void {\n\t\tthis.setFooterMode(FOOTER_MODE_STEP);\n\t\tthis.setCurrentStep(0);\n\t\tthis.rehighlight();\n\t}\n\n\tpublic hideFooter(): void {\n\t\tthis.setFooterMode(FOOTER_MODE_NONE);\n\t\tif (this.bodyLayout === BODY_LAYOUT_REFS) {\n\t\t\tthis.setLayout(BODY_LAYOUT_2H);\n\t\t}\n\t\tthis.rehighlight();\n\t}\n\n\tprivate onCodeChangeRequest(ev: CodeChangeRequestEvent) {\n\t\tconst step = ev.step;\n\t\tconst el = ev.codeElement;\n\t\tconst previousIndex = this.codeChildren.indexOf(el);\n\t\tconst previousVisibleIndex = this.visibleCode.indexOf(el);\n\t\tconst previousVisibleOffset = previousVisibleIndex + 1;\n\t\tconst visibleCount = this.visibleCodeCount;\n\t\tconst allCount = this.codeChildren.length;\n\t\tif (allCount <= visibleCount) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 1; i < allCount; i++) {\n\t\t\tconst targetIndex = (previousIndex + allCount + i * step) % allCount;\n\t\t\tconst targetEl = this.codeChildren[targetIndex];\n\t\t\tconst targetVisibleIndex = this.visibleCode.indexOf(targetEl);\n\t\t\tif (targetVisibleIndex < 0) {\n\t\t\t\tthis.visibleCode[previousVisibleIndex] = targetEl;\n\t\t\t\tel.classList.remove(`amble-code-pos-${previousVisibleOffset}`);\n\t\t\t\tel.navControls = false;\n\t\t\t\tel.clearHighlighted();\n\t\t\t\ttargetEl.classList.add(`amble-code-pos-${previousVisibleOffset}`);\n\t\t\t\ttargetEl.navControls = visibleCount < allCount;\n\t\t\t\tif (this.currentStep != null) {\n\t\t\t\t\ttargetEl.setHighlightedSourceRefs(this.currentHasLinks?.sourceRefs);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate rehighlight() {\n\t\tif (this.footerMode === FOOTER_MODE_STEP) {\n\t\t\tthis.visibleCode.forEach((c) => c.setHighlightedSourceRefs(this.currentHasLinks?.sourceRefs));\n\t\t} else if (this.footerMode === FOOTER_MODE_QUIZ && this.currentQuestion != null) {\n\t\t\tconst doHighlight = this.currentQuestion.highlightWhen === HIGHLIGHT_WHEN_Q || (this.quizMode === QUIZ_MODE_A && this.currentQuestion.highlightWhen !== HIGHLIGHT_WHEN_R) || this.quizMode === QUIZ_MODE_R;\n\t\t\tconst refs: AmbleSourceRefElement[] = doHighlight ? this.currentQuestion.sourceRefs : [];\n\t\t\tthis.visibleCode.forEach((c) => c.setHighlightedSourceRefs(refs));\n\t\t} else {\n\t\t\tthis.visibleCode.forEach((c) => c.clearHighlighted());\n\t\t}\n\t}\n\n\tpublic render(): TemplateResult {\n\t\treturn html`\n\t\t\t<link rel=\"stylesheet\" href=\"src/AmbleViewerElement.css\" />\n\t\t\t<div\n\t\t\t\tclass=${classMap({\n\t\t\t\t\tamble: true,\n\t\t\t\t\t'amble-body-can-2': this.sources.length >= 2,\n\t\t\t\t\t'amble-body-can-4': this.sources.length >= 3,\n\t\t\t\t\t'amble-body-layout-1': this.bodyLayout === BODY_LAYOUT_1,\n\t\t\t\t\t'amble-body-layout-2h': this.bodyLayout === BODY_LAYOUT_2H,\n\t\t\t\t\t'amble-body-layout-2v': this.bodyLayout === BODY_LAYOUT_2V,\n\t\t\t\t\t'amble-body-layout-4': this.bodyLayout === BODY_LAYOUT_4,\n\t\t\t\t\t'amble-body-layout-refs': this.bodyLayout === BODY_LAYOUT_REFS,\n\t\t\t\t\t'amble-can-track-progress': this.trackProgress,\n\t\t\t\t\t'amble-footer-mode-none': this.footerMode === 'none',\n\t\t\t\t\t'amble-footer-mode-quiz': this.footerMode === 'quiz',\n\t\t\t\t\t'amble-footer-mode-step': this.footerMode === 'step',\n\t\t\t\t\t'amble-has-quiz': this.questionChildren.length > 0,\n\t\t\t\t\t'amble-has-step': this.stepChildren.length > 0,\n\t\t\t\t\t'amble-has-steps': this.stepChildren.length > 1,\n\t\t\t\t\t'amble-is-full-screen': this.isFullScreen,\n\t\t\t\t\t'amble-multi-quiz': this.questionChildren.length > 1,\n\t\t\t\t\t'amble-no-quiz': this.questionChildren.length === 0,\n\t\t\t\t\t'amble-no-steps': this.stepChildren.length === 0,\n\t\t\t\t\t'amble-one-step': this.stepChildren.length === 1,\n\t\t\t\t\t'amble-question-has-current': this.currentQuestion != null,\n\t\t\t\t\t'amble-question-no-current': this.currentQuestion == null,\n\t\t\t\t\t'amble-quiz-mode-a': this.quizMode === QUIZ_MODE_A,\n\t\t\t\t\t'amble-quiz-mode-q': this.quizMode === QUIZ_MODE_Q,\n\t\t\t\t\t'amble-quiz-mode-r': this.quizMode === QUIZ_MODE_R,\n\t\t\t\t\t'amble-step-has-current': this.currentStep != null,\n\t\t\t\t\t'amble-step-mode-extra': this.stepExtraMode === STEP_EXTRA_MODE_EXTRA,\n\t\t\t\t\t'amble-step-mode-step': this.stepExtraMode === STEP_EXTRA_MODE_STEP,\n\t\t\t\t\t'amble-step-no-current': this.currentStep == null,\n\t\t\t\t\t'can-full-screen': document.fullscreenEnabled,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<header class=\"amble-header\">\n\t\t\t\t\t<div class=\"amble-header-top\">\n\t\t\t\t\t\t<h1 class=\"amble-title\">\n\t\t\t\t\t\t\t<slot name=\"title\"></slot>\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<nav class=\"amble-nav\">\n\t\t\t\t\t\t\t<amble-button\n\t\t\t\t\t\t\t\tlabel=\"Show walk-through\"\n\t\t\t\t\t\t\t\ttitle=\"Walk-Through\"\n\t\t\t\t\t\t\t\tvalue=\"step\"\n\t\t\t\t\t\t\t\tclass=${classMap({\n\t\t\t\t\t\t\t\t\tactive: this.footerMode === FOOTER_MODE_STEP,\n\t\t\t\t\t\t\t\t\t'step-mode-button': true,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t@click=${this.goStepMode}\n\t\t\t\t\t\t\t\t?disabled=${this.footerMode === FOOTER_MODE_STEP}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t${WALK_THROUGH_SVG}\n\t\t\t\t\t\t\t</amble-button>\n\t\t\t\t\t\t\t<amble-button\n\t\t\t\t\t\t\t\tlabel=\"Show self-assessment\"\n\t\t\t\t\t\t\t\ttitle=\"Self-Assessment\"\n\t\t\t\t\t\t\t\tvalue=\"quiz\"\n\t\t\t\t\t\t\t\t@click=${this.goQuizMode}\n\t\t\t\t\t\t\t\tclass=${classMap({\n\t\t\t\t\t\t\t\t\tactive: this.footerMode === FOOTER_MODE_QUIZ,\n\t\t\t\t\t\t\t\t\t'quiz-mode-button': true,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t?disabled=${this.footerMode === FOOTER_MODE_QUIZ}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t${SELF_ASSESSMENT_SVG}\n\t\t\t\t\t\t\t</amble-button>\n\t\t\t\t\t\t\t<amble-button\n\t\t\t\t\t\t\t\tlabel=\"Hide footer\"\n\t\t\t\t\t\t\t\ttitle=\"Show less\"\n\t\t\t\t\t\t\t\tvalue=\"hidden\"\n\t\t\t\t\t\t\t\t@click=${this.hideFooter}\n\t\t\t\t\t\t\t\tclass=${classMap({\n\t\t\t\t\t\t\t\t\tactive: this.footerMode === FOOTER_MODE_NONE,\n\t\t\t\t\t\t\t\t\t'no-footer-button': true,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t?disabled=${this.footerMode === FOOTER_MODE_NONE}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t${SHOW_LESS_SVG}\n\t\t\t\t\t\t\t</amble-button>\n\t\t\t\t\t\t\t<amble-button class=\"amble-track-toggle\" icon=\"check\" label=\"Toggle progress tracking overlay\" title=\"Track Progress\" disabled=\"disabled\">${CHECKED_BOX_SVG}</amble-button>\n\t\t\t\t\t\t\t<amble-button class=\"amble-layout\" label=\"Toggle code layout overlay\" title=\"Code Layout\" @click=${this.toggleLayout}>${LAYOUT_SVG}</amble-button>\n\t\t\t\t\t\t\t<amble-button @click=\"${this.goFullscreen}\" class=\"amble-big-toggle\" label=\"Toggle fullscreen display for this code walkthrough\" bindableTitle=\"${this.isFullScreen ? 'Leave Full Screen' : 'Go Full Screen'}\">${this.isFullScreen ? EXIT_FULL_SCREEN_SVG : FULL_SCREEN_SVG}</amble-button>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 class=\"amble-description\">\n\t\t\t\t\t\t<slot name=\"description\"></slot>\n\t\t\t\t\t</h2>\n\t\t\t\t</header>\n\t\t\t\t<main class=\"amble-body\">\n\t\t\t\t\t${this.sources.map((source, index) => html` <amble-code source=${source.unindentedSource} index=${index} syntax=${source.syntax} label=${source.label} navControls=\"true\"></amble-code> `)}\n\t\t\t\t\t<div class=\"amble-refs\">\n\t\t\t\t\t\t<header class=\"amble-refs-header\">\n\t\t\t\t\t\t\t<label>References</label>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<nav class=\"amble-refs-links\"> ${(this.currentHasLinks?.links || []).map((link) => html` <span class=\"amble-ref-link\">${LINK_SVG} ${link}</span> `)} </nav>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<footer class=\"amble-footer\">\n\t\t\t\t\t<div class=\"amble-walk\">\n\t\t\t\t\t\t${this.stepChildren.map(\n\t\t\t\t\t\t\t(step, index) => html`\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass=${classMap({\n\t\t\t\t\t\t\t\t\t\t'amble-step-has-extra': step.extra != null,\n\t\t\t\t\t\t\t\t\t\t'amble-step-no-extra': step.extra == null,\n\t\t\t\t\t\t\t\t\t\t'amble-walk-step': true,\n\t\t\t\t\t\t\t\t\t\t'amble-walk-step-current': index === this.currentStepNum,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div class=\"amble-walk-step-header\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"amble-walk-description\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-with-code\">${unsafeHTML(step.description)}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<amble-button @click=${this.toggleReferences} class=\"amble-walk-refs-toggle\" label=\"Toggle additional references\" title=\"References\">${INFO_SVG}</amble-button>\n\t\t\t\t\t\t\t\t\t\t<amble-button @click=${this.toggleStepExtra} class=\"amble-walk-extra-toggle\" label=\"Toggle extra details\" title=\"Extras\">${SHOW_MORE_SVG}</amble-button>\n\t\t\t\t\t\t\t\t\t\t<amble-button @click=${this.backStep} class=\"amble-walk-prev\" label=\"Previous walk-through item\" title=\"Previous\">${ARROW_LEFT_SVG}</amble-button>\n\t\t\t\t\t\t\t\t\t\t<div class=\"amble-walk-progress amble-progress\">\n\t\t\t\t\t\t\t\t\t\t\t<span>${index + 1 + '/' + this.stepChildren.length}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<amble-button @click=${this.forwardStep} class=\"amble-walk-next\" label=\"Next walk-through item\" title=\"Next\">${ARROW_RIGHT_SVG}</amble-button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"amble-walk-extra\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"text-with-code\">${unsafeHTML(step.extra)}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"amble-quiz\">\n\t\t\t\t\t\t${this.questionChildren.map(\n\t\t\t\t\t\t\t(q, index) => html`\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass=${classMap({\n\t\t\t\t\t\t\t\t\t\t'amble-question-has-rationale': q.rationaleEl != null,\n\t\t\t\t\t\t\t\t\t\t'amble-question-no-rationale': q.rationaleEl == null,\n\t\t\t\t\t\t\t\t\t\t'amble-quiz-current-item': index === this.currentQuestionNum,\n\t\t\t\t\t\t\t\t\t\t'amble-quiz-qar': true,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div class=\"amble-quiz-q\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"amble-qa-label\">Q:</span>\n\t\t\t\t\t\t\t\t\t\t<div class=\"amble-quiz-question\">\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"text-with-code\">${unsafeHTML(q.questionEl?.innerHTML)}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<amble-button @click=${this.toggleReferences} class=\"amble-walk-refs-toggle\" label=\"Toggle additional references\" title=\"References\">${INFO_SVG}</amble-button>\n\t\t\t\t\t\t\t\t\t\t<amble-button @click=${this.toggleAnswer} class=\"amble-quiz-answer-toggle\" label=\"Toggle the answer\" title=\"Answer\">${SHOW_MORE_SVG}</amble-button>\n\t\t\t\t\t\t\t\t\t\t<amble-button @click=${this.backQuestion} class=\"amble-quiz-prev\" label=\"Previous self-assessment item\" title=\"Previous\">${ARROW_LEFT_SVG}</amble-button>\n\t\t\t\t\t\t\t\t\t\t<div class=\"amble-quiz-progress amble-progress\">\n\t\t\t\t\t\t\t\t\t\t\t<nobr>${index + 1 + '/' + this.questionChildren.length}</nobr>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<amble-button @click=${this.forwardQuestion} class=\"amble-quiz-next\" label=\"Next self-assessment item\" title=\"Next\">${ARROW_RIGHT_SVG}</amble-button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"amble-quiz-answer\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"amble-qa-label\">A:</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"text-with-code\">${unsafeHTML(q.answerEl?.innerHTML)}</span>\n\t\t\t\t\t\t\t\t\t\t<amble-button @click=${this.toggleRationale} class=\"amble-quiz-rationale-toggle\" label=\"Toggle the rationale\" title=\"Rationale\">${SHOW_MORE_SVG}</amble-button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"amble-quiz-rationale\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"amble-qa-label\">Rationale:</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"text-with-code\">${unsafeHTML(q.rationaleEl?.innerHTML)}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tpublic setCurrentQuestion(index: number): void {\n\t\tconst previousIndex = this.currentQuestionNum;\n\t\tconst previousIn = this.currentQuestion;\n\t\tconst previousOut = this.currentRenderedQuestion;\n\t\tconst questionIn = index < 0 ? undefined : this.questionChildren[index];\n\t\tconst questionOut = index < 0 ? undefined : this.renderedQuestions[index];\n\t\tif (previousIn !== questionIn) {\n\t\t\tif (questionOut != null) {\n\t\t\t\tquestionOut.classList.add(QUESTION_CURRENT);\n\t\t\t}\n\t\t\tif (previousOut != null) {\n\t\t\t\tpreviousOut.classList.remove(QUESTION_CURRENT);\n\t\t\t}\n\t\t\tthis.currentQuestionNum = index;\n\t\t\tthis.changed('currentQuestionNum', previousIndex);\n\t\t\tthis.currentQuestion = questionIn;\n\t\t\tthis.changed('currentQuestion', previousIn);\n\t\t\tthis.currentRenderedQuestion = questionOut;\n\t\t\tthis.changed('currentRenderedQuestion', previousOut);\n\t\t\tconst previousQuizMode = this.quizMode;\n\t\t\tif (previousQuizMode !== QUIZ_MODE_Q) {\n\t\t\t\tthis.quizMode = QUIZ_MODE_Q;\n\t\t\t\tthis.changed('quizMode', previousQuizMode);\n\t\t\t}\n\t\t}\n\t\tthis.changed('currentHasLinks', previousIn);\n\t\tthis.rehighlight();\n\t}\n\n\tpublic setCurrentStep(index: number): void {\n\t\tconst previousIndex = this.currentStepNum;\n\t\tconst previousStep = this.currentStep;\n\t\tconst nowStep = index < 0 ? undefined : this.stepChildren[index];\n\t\tif (nowStep != null && nowStep.extra == null) {\n\t\t\tconst wasStepExtraMode = this.stepExtraMode;\n\t\t\tthis.stepExtraMode = STEP_EXTRA_MODE_STEP;\n\t\t\tthis.changed('stepExtraMode', wasStepExtraMode);\n\t\t}\n\t\tthis.currentStepNum = index;\n\t\tthis.changed('currentStepNum', previousIndex);\n\t\tthis.currentStep = nowStep;\n\t\tthis.changed('currentStep', previousStep);\n\t\tthis.changed('currentHasLinks', previousStep);\n\t\tthis.rehighlight();\n\t}\n\n\tpublic setFooterMode(mode: typeof FOOTER_MODE_STEP | typeof FOOTER_MODE_QUIZ | typeof FOOTER_MODE_NONE): void {\n\t\tconst oldMode = this.footerMode;\n\t\tif (oldMode !== mode) {\n\t\t\tthis.footerMode = mode;\n\t\t\tthis.changed('footerMode', oldMode);\n\t\t}\n\t}\n\n\tpublic setLayout(layout: BodyLayout): void {\n\t\tconst previousLayout = this.bodyLayout;\n\t\tconst previousVisibleCount = CODE_COUNT_BY_LAYOUT[previousLayout];\n\t\tthis.bodyLayout = layout;\n\t\tthis.visibleCodeCount = CODE_COUNT_BY_LAYOUT[layout];\n\t\tthis.changed('bodyLayout', previousLayout);\n\t\tif (this.visibleCodeCount < previousVisibleCount) {\n\t\t\tfor (let i = this.visibleCodeCount; i < previousVisibleCount; i++) {\n\t\t\t\tconst el = this.visibleCode[i];\n\t\t\t\tel.classList.remove(`amble-code-pos-${i + 1}`);\n\t\t\t\tel.clearHighlighted();\n\t\t\t}\n\t\t\tthis.visibleCode.splice(this.visibleCodeCount, previousVisibleCount - this.visibleCodeCount);\n\t\t} else if (this.visibleCodeCount > previousVisibleCount) {\n\t\t\tthis.codeChildren\n\t\t\t\t.filter((c) => !this.visibleCode.includes(c))\n\t\t\t\t.slice(0, this.visibleCodeCount - previousVisibleCount)\n\t\t\t\t.forEach((c) => {\n\t\t\t\t\tthis.visibleCode.push(c);\n\t\t\t\t});\n\t\t}\n\t\tconst allowNav = this.visibleCodeCount < this.codeChildren.length;\n\t\tthis.visibleCode.forEach((c, i) => {\n\t\t\tfor (let j = 1; j <= 4; j++) {\n\t\t\t\tconst pos = `amble-code-pos-${j}`;\n\t\t\t\tif (i === j - 1) {\n\t\t\t\t\tc.classList.add(pos);\n\t\t\t\t} else {\n\t\t\t\t\tc.classList.remove(pos);\n\t\t\t\t}\n\t\t\t}\n\t\t\tc.navControls = allowNav;\n\t\t});\n\t\tthis.rehighlight();\n\t}\n\n\tpublic setQuizMode(mode: QuizMode): void {\n\t\tconst previous = this.quizMode;\n\t\tif (previous !== mode) {\n\t\t\tthis.quizMode = mode;\n\t\t\tthis.changed('quizMode', previous);\n\t\t}\n\t}\n\n\tpublic toggleAnswer(): void {\n\t\tconst previous = this.quizMode;\n\t\tthis.quizMode = previous === QUIZ_MODE_Q ? QUIZ_MODE_A : QUIZ_MODE_Q;\n\t\tthis.changed('quizMode', previous);\n\t\tthis.rehighlight();\n\t}\n\n\tpublic toggleLayout(): void {\n\t\tlet newLayout: BodyLayout;\n\t\tswitch (this.bodyLayout) {\n\t\t\tcase BODY_LAYOUT_1:\n\t\t\t\tnewLayout = BODY_LAYOUT_2H;\n\t\t\t\tbreak;\n\t\t\tcase BODY_LAYOUT_2H:\n\t\t\t\tnewLayout = BODY_LAYOUT_2V;\n\t\t\t\tbreak;\n\t\t\tcase BODY_LAYOUT_2V:\n\t\t\t\tnewLayout = this.sources.length > 2 ? BODY_LAYOUT_4 : BODY_LAYOUT_1;\n\t\t\t\tbreak;\n\t\t\tcase BODY_LAYOUT_4:\n\t\t\t\tnewLayout = BODY_LAYOUT_1;\n\t\t\t\tbreak;\n\t\t\tcase BODY_LAYOUT_REFS:\n\t\t\t\tnewLayout = BODY_LAYOUT_2H;\n\t\t}\n\t\tthis.setLayout(newLayout);\n\t}\n\n\tpublic toggleRationale(): void {\n\t\tconst previous = this.quizMode;\n\t\tthis.quizMode = previous === QUIZ_MODE_R ? QUIZ_MODE_A : QUIZ_MODE_R;\n\t\tthis.changed('quizMode', previous);\n\t\tthis.rehighlight();\n\t}\n\n\tpublic toggleReferences(): void {\n\t\tthis.setLayout(this.bodyLayout === BODY_LAYOUT_REFS ? BODY_LAYOUT_2H : BODY_LAYOUT_REFS);\n\t}\n\n\tpublic toggleStepExtra(): void {\n\t\tconst oldValue = this.stepExtraMode;\n\t\tif (this.stepExtraMode === STEP_EXTRA_MODE_EXTRA) {\n\t\t\tthis.stepExtraMode = STEP_EXTRA_MODE_STEP;\n\t\t} else {\n\t\t\tthis.stepExtraMode = STEP_EXTRA_MODE_EXTRA;\n\t\t}\n\t\tthis.changed('stepExtraMode', oldValue);\n\t}\n}\n","export type ResolveLike<T> = (value: T | Promise<T>) => void;\nexport type RejectLike = (reason?: unknown) => void;\n\nexport interface ResolvablePromise<T> extends Promise<T> {\n\tdidReject: boolean;\n\tdidResolve: boolean;\n\thasCompleted: boolean;\n\treject: RejectLike;\n\tresolve: ResolveLike<T>;\n}\n\nclass ResolvablePromiseImpl<T> implements ResolvablePromise<T> {\n\tprivate _didReject = false;\n\tprivate _didResolve = false;\n\t// noinspection SpellCheckingInspection\n\tprivate _rejecter: RejectLike | undefined;\n\tprivate readonly _rejection: Array<unknown> = [];\n\tprivate readonly _resolution: Array<T | Promise<T>> = [];\n\tprivate _resolver: ResolveLike<T> | undefined;\n\tprivate _promise: Promise<T> = new Promise<T>((resolve, reject) => {\n\t\tthis._resolver = resolve;\n\t\tthis._rejecter = reject;\n\t\tif (!this.hasCompleted) {\n\t\t\tif (this._rejection.length) {\n\t\t\t\tthis._didReject = true;\n\t\t\t\treject(this._rejection[0]);\n\t\t\t} else if (this._resolution.length) {\n\t\t\t\tthis._didResolve = true;\n\t\t\t\tresolve(this._resolution[0]);\n\t\t\t}\n\t\t}\n\t});\n\n\tpublic get [Symbol.toStringTag](): string {\n\t\treturn this._promise[Symbol.toStringTag];\n\t}\n\n\tpublic get didReject(): boolean {\n\t\treturn this._didReject;\n\t}\n\n\tpublic get didResolve(): boolean {\n\t\treturn this._didResolve;\n\t}\n\n\tpublic get hasCompleted(): boolean {\n\t\treturn this._didResolve || this._didReject;\n\t}\n\n\tcatch<TResult = never>(onRejected?: ((reason: unknown) => PromiseLike<TResult> | TResult) | undefined | null): Promise<T | TResult> {\n\t\treturn this._promise.catch(onRejected);\n\t}\n\n\tfinally(onFinally?: (() => void) | undefined | null): Promise<T> {\n\t\treturn this._promise.finally(onFinally);\n\t}\n\n\tpublic reject(reason: unknown): void {\n\t\tif (!this.hasCompleted) {\n\t\t\tif (this._rejecter == null) {\n\t\t\t\tthis._rejection.push(reason);\n\t\t\t} else {\n\t\t\t\tthis._didReject = true;\n\t\t\t\tthis._rejecter(reason);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic resolve(value: Promise<T> | T): void {\n\t\tif (!this.hasCompleted) {\n\t\t\tif (this._resolver == null) {\n\t\t\t\tthis._resolution.push(value);\n\t\t\t} else {\n\t\t\t\tthis._didResolve = true;\n\t\t\t\tthis._resolver(value);\n\t\t\t}\n\t\t}\n\t}\n\n\tthen<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => PromiseLike<TResult1> | TResult1) | undefined | null,\n\t\tonRejected?: ((reason: unknown) => PromiseLike<TResult2> | TResult2) | undefined | null\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this._promise.then(onFulfilled, onRejected);\n\t}\n}\n\nexport function resolvablePromise<T>(): ResolvablePromise<T> {\n\treturn new ResolvablePromiseImpl();\n}\n","export function spinal(s: string | null | undefined): string {\n\treturn (s == null ? '' : s)\n\t\t.trim()\n\t\t.toLowerCase()\n\t\t.replace(/[^a-z0-9]+/g, '-');\n}\n\nexport function detectEOL(s: string): string {\n\tfor (const eol of ['\\r\\n', '\\r', '\\n']) {\n\t\tif (s.includes(eol)) {\n\t\t\treturn eol;\n\t\t}\n\t}\n\treturn '';\n}\n\nexport function unindent(source: string): string {\n\tconst delimiter = detectEOL(source);\n\tif (delimiter === '') {\n\t\t// single line\n\t\treturn source.replace(/^\\s+|\\s+$/g, '');\n\t}\n\tconst lines = source.split(delimiter);\n\twhile (lines.length > 0 && lines[0].match(/^\\s*$/)) {\n\t\tlines.shift();\n\t}\n\twhile (lines.length > 0 && lines[lines.length - 1].match(/^\\s*$/)) {\n\t\tlines.pop();\n\t}\n\tif (lines.length === 0) {\n\t\treturn '';\n\t}\n\tconst first = lines[0];\n\tconst initialMatch = first.match(/^(\\s+)/);\n\tif (initialMatch == null) {\n\t\treturn lines.join(delimiter);\n\t}\n\tconst leading = initialMatch[0];\n\treturn lines\n\t\t.map((line) => {\n\t\t\tif (line.startsWith(leading)) {\n\t\t\t\treturn line.substr(leading.length);\n\t\t\t}\n\t\t\treturn line;\n\t\t})\n\t\t.join(delimiter);\n}\n\nexport function undefIfEmpty(value: string | null | undefined): string | undefined {\n\treturn value == null || value === '' ? undefined : value;\n}\n\nexport function catchAndLog(promise: Promise<unknown> | undefined | null, message?: string): void {\n\tif (promise != null) {\n\t\tpromise.catch((err) => console.error(message, err));\n\t}\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./index.ts\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}